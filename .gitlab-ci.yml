include:
  - project: 'papers/papers-internal/internal'
    file: '/.base-gitlab-ci.yml'

variables:
  KUSAMA: kusama
  ROCOCO: rococo
  KUSAMA_TAG: eu.gcr.io/papers-kubernetes/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME-kusama:$CI_COMMIT_SHA
  KUSAMA_TAG_LATEST: eu.gcr.io/papers-kubernetes/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME-kusama:latest
  KUSAMA_TAG_DEV: eu.gcr.io/papers-dev-kubernetes/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME-kusama:$CI_COMMIT_SHA
  KUSAMA_TAG_LATEST_DEV: eu.gcr.io/papers-dev-kubernetes/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME-kusama:latest
  DOCKERHUB_CANARY_BASE: acurast/node-canary
  DOCKERHUB_CANARY_TAG: $DOCKERHUB_CANARY_BASE:$CI_COMMIT_SHA
  DOCKERHUB_CANARY_TAG_LATEST: $DOCKERHUB_CANARY_BASE:latest

stages:
  - benchmarking
  - checks
  - build
  - publish

.prepare_rust:
  image: rust:latest
  before_script:
    - apt update && apt install --assume-yes git clang curl libssl-dev llvm libudev-dev make protobuf-compiler
    - rustup update nightly-2023-08-31 && rustup target add wasm32-unknown-unknown --toolchain nightly-2023-08-31
    - rustup component add rustfmt --toolchain nightly-2023-08-31

format-check:
  stage: checks
  extends: .prepare_rust
  script:
    - cargo fmt --check

test:
  stage: checks
  extends: .prepare_rust
  script:
    - cargo test

build:
  stage: build
  script:
    - docker build -t $GOOGLE_TAG .
    - docker build -t $KUSAMA_TAG --build-arg chain="kusama" .

publish-dev:
  stage: publish
  extends: .before_script_dev
  when: manual
  script:
    - docker tag $GOOGLE_TAG $GOOGLE_TAG_DEV
    - docker tag $GOOGLE_TAG $GOOGLE_TAG_LATEST_DEV
    - docker push $GOOGLE_TAG_DEV
    - docker push $GOOGLE_TAG_LATEST_DEV

    - docker tag $KUSAMA_TAG $KUSAMA_TAG_DEV
    - docker tag $KUSAMA_TAG $KUSAMA_TAG_LATEST_DEV
    - docker push $KUSAMA_TAG_DEV
    - docker push $KUSAMA_TAG_LATEST_DEV

publish-prod:
  stage: publish
  extends: .before_script_prod
  when: manual
  script:
    - docker tag $GOOGLE_TAG $GOOGLE_TAG_LATEST
    - docker push $GOOGLE_TAG
    - docker push $GOOGLE_TAG_LATEST

    - docker tag $KUSAMA_TAG $KUSAMA_TAG_LATEST
    - docker push $KUSAMA_TAG
    - docker push $KUSAMA_TAG_LATEST

publish-dockerhub:
  stage: publish
  variables:
    IMAGE_TAG: $DOCKERHUB_CANARY_BASE:$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - echo $DOCKERHUB_PASSWORD | docker login -u "$DOCKERHUB_USER" --password-stdin
  script:
    # only kusama tag publishing
    - docker tag $KUSAMA_TAG $IMAGE_TAG
    - docker tag $KUSAMA_TAG $DOCKERHUB_CANARY_TAG
    - docker tag $KUSAMA_TAG $DOCKERHUB_CANARY_TAG_LATEST
    - docker push $IMAGE_TAG
    - docker push $DOCKERHUB_CANARY_TAG
    - docker push $DOCKERHUB_CANARY_TAG_LATEST

.prepare-benchmarking:
  script:
    - mkdir -p $KUSAMA/ $ROCOCO/
    - docker build -t $CI_COMMIT_SHA-$KUSAMA-benchmarks --build-arg benchmarks="$KUSAMA" .
    #- docker build -t $CI_COMMIT_SHA-$ROCOCO-benchmarks --build-arg benchmarks="$ROCOCO" .
    - docker create --name $KUSAMA $CI_COMMIT_SHA-$KUSAMA-benchmarks
    #- docker create --name $ROCOCO $CI_COMMIT_SHA-$ROCOCO-benchmarks
    - docker cp "$KUSAMA:/usr/local/bin/acurast-node" $KUSAMA/
    #- docker cp "$ROCOCO:/usr/local/bin/acurast-node" $ROCOCO/
    - docker rm $KUSAMA #$ROCOCO

run-kusama-benchmarks:
  extends: .before_script_dev
  stage: benchmarking
  when: manual
  variables:
    VM_ZONE: "us-central1-a"
  timeout: 3h
  script:
    - !reference [.prepare-benchmarking, script]
    # create vm
    - gcloud compute instances create acurast-benchmark --image=ubuntu-minimal-2210-kinetic-amd64-v20230328 --machine-type=c2d-highcpu-8 --preemptible --zone=$VM_ZONE --image-project=ubuntu-os-cloud
    #  copy over binary
    - gcloud compute scp --zone=$VM_ZONE $KUSAMA/acurast-node acurast-benchmark:/acurast-node
    # run benchmarks
    - gcloud compute ssh acurast-benchmark --zone=$VM_ZONE --command="mkdir -p /benchmarks; /acurast-node benchmark pallet --chain=acurast-kusama --execution=wasm --wasm-execution=compiled --pallet "*" --extrinsic "*" --steps=50 --repeat=20 --output=/benchmarks/"
    # copy over benchmarks
    - gcloud compute scp --zone=$VM_ZONE --recurse acurast-benchmark:/benchmarks $KUSAMA/

  after_script:
    # delete vm
    - gcloud compute instances delete acurast-benchmark --zone=$VM_ZONE --quiet

  artifacts:
    paths:
      - $KUSAMA
    expire_in: "30 days"
