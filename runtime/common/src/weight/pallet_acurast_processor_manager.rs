
//! Autogenerated weights for `pallet_acurast_processor_manager`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2025-02-27, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `acurast-benchmark`, CPU: `AMD EPYC 7B13`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("acurast-dev")`, DB CACHE: 1024

// Executed Command:
// /acurast-node
// benchmark
// pallet
// --chain=acurast-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// *
// --extrinsic
// *
// --steps=50
// --repeat=20
// --output=/benchmarks/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_acurast_processor_manager`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_acurast_processor_manager::WeightInfo for WeightInfo<T> {
	/// Storage: `Uniques::Account` (r:1 w:1)
	/// Proof: `Uniques::Account` (`max_values`: None, `max_size`: Some(112), added: 2587, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::LastManagerId` (r:1 w:1)
	/// Proof: `AcurastProcessorManager::LastManagerId` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::Class` (r:1 w:1)
	/// Proof: `Uniques::Class` (`max_values`: None, `max_size`: Some(190), added: 2665, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::Asset` (r:1 w:1)
	/// Proof: `Uniques::Asset` (`max_values`: None, `max_size`: Some(146), added: 2621, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::CollectionMaxSupply` (r:1 w:0)
	/// Proof: `Uniques::CollectionMaxSupply` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ManagerCounter` (r:1 w:1)
	/// Proof: `AcurastProcessorManager::ManagerCounter` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorToManagerIdIndex` (r:20 w:20)
	/// Proof: `AcurastProcessorManager::ProcessorToManagerIdIndex` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::ClassAccount` (r:0 w:1)
	/// Proof: `Uniques::ClassAccount` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ManagedProcessors` (r:0 w:20)
	/// Proof: `AcurastProcessorManager::ManagedProcessors` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[1, 20]`.
	fn update_processor_pairings(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `282`
		//  Estimated: `3655 + x * (2507 Â±0)`
		// Minimum execution time: 73_270_000 picoseconds.
		Weight::from_parts(65_421_929, 0)
			.saturating_add(Weight::from_parts(0, 3655))
			// Standard Error: 18_314
			.saturating_add(Weight::from_parts(10_969_193, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(6))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 2507).saturating_mul(x.into()))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::Account` (r:1 w:1)
	/// Proof: `Uniques::Account` (`max_values`: None, `max_size`: Some(112), added: 2587, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::LastManagerId` (r:1 w:1)
	/// Proof: `AcurastProcessorManager::LastManagerId` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::Class` (r:1 w:1)
	/// Proof: `Uniques::Class` (`max_values`: None, `max_size`: Some(190), added: 2665, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::Asset` (r:1 w:1)
	/// Proof: `Uniques::Asset` (`max_values`: None, `max_size`: Some(146), added: 2621, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::CollectionMaxSupply` (r:1 w:0)
	/// Proof: `Uniques::CollectionMaxSupply` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ManagerCounter` (r:1 w:1)
	/// Proof: `AcurastProcessorManager::ManagerCounter` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorToManagerIdIndex` (r:1 w:1)
	/// Proof: `AcurastProcessorManager::ProcessorToManagerIdIndex` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::ClassAccount` (r:0 w:1)
	/// Proof: `Uniques::ClassAccount` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ManagedProcessors` (r:0 w:1)
	/// Proof: `AcurastProcessorManager::ManagedProcessors` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	fn pair_with_manager() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `282`
		//  Estimated: `3655`
		// Minimum execution time: 72_440_000 picoseconds.
		Weight::from_parts(74_540_000, 0)
			.saturating_add(Weight::from_parts(0, 3655))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	/// Storage: `AcurastProcessorManager::ProcessorToManagerIdIndex` (r:1 w:0)
	/// Proof: `AcurastProcessorManager::ProcessorToManagerIdIndex` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::Asset` (r:1 w:0)
	/// Proof: `Uniques::Asset` (`max_values`: None, `max_size`: Some(146), added: 2621, mode: `MaxEncodedLen`)
	fn recover_funds() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `563`
		//  Estimated: `3611`
		// Minimum execution time: 28_550_000 picoseconds.
		Weight::from_parts(29_329_000, 0)
			.saturating_add(Weight::from_parts(0, 3611))
			.saturating_add(T::DbWeight::get().reads(2))
	}
	/// Storage: `AcurastProcessorManager::ProcessorToManagerIdIndex` (r:1 w:0)
	/// Proof: `AcurastProcessorManager::ProcessorToManagerIdIndex` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorHeartbeat` (r:0 w:1)
	/// Proof: `AcurastProcessorManager::ProcessorHeartbeat` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	fn heartbeat() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `254`
		//  Estimated: `3497`
		// Minimum execution time: 22_510_000 picoseconds.
		Weight::from_parts(23_320_000, 0)
			.saturating_add(Weight::from_parts(0, 3497))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `AcurastProcessorManager::ProcessorToManagerIdIndex` (r:1 w:0)
	/// Proof: `AcurastProcessorManager::ProcessorToManagerIdIndex` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::Asset` (r:1 w:0)
	/// Proof: `Uniques::Asset` (`max_values`: None, `max_size`: Some(146), added: 2621, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::StoredAdvertisementRestriction` (r:1 w:1)
	/// Proof: `AcurastMarketplace::StoredAdvertisementRestriction` (`max_values`: None, `max_size`: Some(3830), added: 6305, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::StoredReputation` (r:1 w:1)
	/// Proof: `AcurastMarketplace::StoredReputation` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::StoredStorageCapacity` (r:0 w:1)
	/// Proof: `AcurastMarketplace::StoredStorageCapacity` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::StoredAdvertisementPricing` (r:0 w:1)
	/// Proof: `AcurastMarketplace::StoredAdvertisementPricing` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	fn advertise_for() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `553`
		//  Estimated: `7295`
		// Minimum execution time: 38_040_000 picoseconds.
		Weight::from_parts(39_110_000, 0)
			.saturating_add(Weight::from_parts(0, 7295))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `AcurastProcessorManager::ProcessorToManagerIdIndex` (r:1 w:0)
	/// Proof: `AcurastProcessorManager::ProcessorToManagerIdIndex` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Acurast::StoredAttestation` (r:1 w:0)
	/// Proof: `Acurast::StoredAttestation` (`max_values`: None, `max_size`: Some(11623), added: 14098, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorMinVersionForReward` (r:1 w:0)
	/// Proof: `AcurastProcessorManager::ProcessorMinVersionForReward` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorRewardDistributionSettings` (r:1 w:0)
	/// Proof: `AcurastProcessorManager::ProcessorRewardDistributionSettings` (`max_values`: Some(1), `max_size`: Some(60), added: 555, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::Asset` (r:1 w:0)
	/// Proof: `Uniques::Asset` (`max_values`: None, `max_size`: Some(146), added: 2621, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorRewardDistributionWindow` (r:1 w:1)
	/// Proof: `AcurastProcessorManager::ProcessorRewardDistributionWindow` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorVersion` (r:0 w:1)
	/// Proof: `AcurastProcessorManager::ProcessorVersion` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorHeartbeat` (r:0 w:1)
	/// Proof: `AcurastProcessorManager::ProcessorHeartbeat` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	fn heartbeat_with_version() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1246`
		//  Estimated: `15088`
		// Minimum execution time: 115_090_000 picoseconds.
		Weight::from_parts(120_030_000, 0)
			.saturating_add(Weight::from_parts(0, 15088))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `AcurastProcessorManager::ProcessorToManagerIdIndex` (r:1 w:0)
	/// Proof: `AcurastProcessorManager::ProcessorToManagerIdIndex` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Acurast::StoredAttestation` (r:1 w:0)
	/// Proof: `Acurast::StoredAttestation` (`max_values`: None, `max_size`: Some(11623), added: 14098, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorMinVersionForReward` (r:1 w:0)
	/// Proof: `AcurastProcessorManager::ProcessorMinVersionForReward` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `AcurastCompute::LastMetricPoolId` (r:1 w:0)
	/// Proof: `AcurastCompute::LastMetricPoolId` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	/// Storage: `AcurastCompute::Processors` (r:1 w:1)
	/// Proof: `AcurastCompute::Processors` (`max_values`: None, `max_size`: Some(89), added: 2564, mode: `MaxEncodedLen`)
	/// Storage: `AcurastCompute::Metrics` (r:1 w:1)
	/// Proof: `AcurastCompute::Metrics` (`max_values`: None, `max_size`: Some(61), added: 2536, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorVersion` (r:0 w:1)
	/// Proof: `AcurastProcessorManager::ProcessorVersion` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorHeartbeat` (r:0 w:1)
	/// Proof: `AcurastProcessorManager::ProcessorHeartbeat` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[0, 20]`.
	fn heartbeat_with_metrics(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `823`
		//  Estimated: `15088`
		// Minimum execution time: 51_570_000 picoseconds.
		Weight::from_parts(56_952_262, 0)
			.saturating_add(Weight::from_parts(0, 15088))
			// Standard Error: 11_585
			.saturating_add(Weight::from_parts(1_819_005, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `AcurastProcessorManager::KnownBinaryHash` (r:0 w:1)
	/// Proof: `AcurastProcessorManager::KnownBinaryHash` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	fn update_binary_hash() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_700_000 picoseconds.
		Weight::from_parts(11_220_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `AcurastProcessorManager::ApiVersion` (r:0 w:1)
	/// Proof: `AcurastProcessorManager::ApiVersion` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn update_api_version() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 7_500_000 picoseconds.
		Weight::from_parts(8_110_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `AcurastProcessorManager::KnownBinaryHash` (r:1 w:0)
	/// Proof: `AcurastProcessorManager::KnownBinaryHash` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorToManagerIdIndex` (r:100 w:0)
	/// Proof: `AcurastProcessorManager::ProcessorToManagerIdIndex` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Uniques::Asset` (r:1 w:0)
	/// Proof: `Uniques::Asset` (`max_values`: None, `max_size`: Some(146), added: 2621, mode: `MaxEncodedLen`)
	/// Storage: `AcurastProcessorManager::ProcessorUpdateInfo` (r:0 w:100)
	/// Proof: `AcurastProcessorManager::ProcessorUpdateInfo` (`max_values`: None, `max_size`: Some(258), added: 2733, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[1, 100]`.
	fn set_processor_update_info(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `562 + x * (36 Â±0)`
		//  Estimated: `3611 + x * (2507 Â±0)`
		// Minimum execution time: 32_160_000 picoseconds.
		Weight::from_parts(23_625_734, 0)
			.saturating_add(Weight::from_parts(0, 3611))
			// Standard Error: 6_325
			.saturating_add(Weight::from_parts(8_978_368, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 2507).saturating_mul(x.into()))
	}
	/// Storage: `AcurastProcessorManager::ProcessorRewardDistributionSettings` (r:0 w:1)
	/// Proof: `AcurastProcessorManager::ProcessorRewardDistributionSettings` (`max_values`: Some(1), `max_size`: Some(60), added: 555, mode: `MaxEncodedLen`)
	fn update_reward_distribution_settings() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 4_120_000 picoseconds.
		Weight::from_parts(4_271_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `AcurastProcessorManager::ProcessorMinVersionForReward` (r:0 w:1)
	/// Proof: `AcurastProcessorManager::ProcessorMinVersionForReward` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	fn update_min_processor_version_for_reward() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 9_540_000 picoseconds.
		Weight::from_parts(10_200_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
