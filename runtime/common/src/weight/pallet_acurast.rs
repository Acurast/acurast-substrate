
//! Autogenerated weights for `pallet_acurast`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2025-03-19, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `acurast-benchmark`, CPU: `AMD EPYC 7B13`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("acurast-dev")`, DB CACHE: 1024

// Executed Command:
// /acurast-node
// benchmark
// pallet
// --chain=acurast-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// *
// --extrinsic
// *
// --steps=50
// --repeat=20
// --output=/benchmarks/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_acurast`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_acurast::WeightInfo for WeightInfo<T> {
	/// Storage: `Acurast::LocalJobIdSequence` (r:1 w:1)
	/// Proof: `Acurast::LocalJobIdSequence` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::StoredJobStatus` (r:1 w:1)
	/// Proof: `AcurastMarketplace::StoredJobStatus` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::StoredAdvertisementRestriction` (r:1 w:0)
	/// Proof: `AcurastMarketplace::StoredAdvertisementRestriction` (`max_values`: None, `max_size`: Some(3831), added: 6306, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::StoredAdvertisementPricing` (r:1 w:0)
	/// Proof: `AcurastMarketplace::StoredAdvertisementPricing` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::StoredStorageCapacity` (r:1 w:1)
	/// Proof: `AcurastMarketplace::StoredStorageCapacity` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::StoredMatches` (r:2 w:1)
	/// Proof: `AcurastMarketplace::StoredMatches` (`max_values`: None, `max_size`: Some(345), added: 2820, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::StoredTotalAssignedV3` (r:1 w:1)
	/// Proof: `AcurastMarketplace::StoredTotalAssignedV3` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::StoredAverageRewardV3` (r:1 w:1)
	/// Proof: `AcurastMarketplace::StoredAverageRewardV3` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::JobBudgets` (r:1 w:1)
	/// Proof: `AcurastMarketplace::JobBudgets` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::AssignedProcessors` (r:0 w:1)
	/// Proof: `AcurastMarketplace::AssignedProcessors` (`max_values`: None, `max_size`: Some(118), added: 2593, mode: `MaxEncodedLen`)
	/// Storage: `Acurast::StoredJobRegistration` (r:0 w:1)
	/// Proof: `Acurast::StoredJobRegistration` (`max_values`: None, `max_size`: Some(34817), added: 37292, mode: `MaxEncodedLen`)
	fn register() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `686`
		//  Estimated: `7296`
		// Minimum execution time: 127_419_000 picoseconds.
		Weight::from_parts(130_180_000, 0)
			.saturating_add(Weight::from_parts(0, 7296))
			.saturating_add(T::DbWeight::get().reads(12))
			.saturating_add(T::DbWeight::get().writes(10))
	}
	/// Storage: `AcurastMarketplace::StoredJobStatus` (r:1 w:1)
	/// Proof: `AcurastMarketplace::StoredJobStatus` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	/// Storage: `Acurast::StoredJobRegistration` (r:1 w:1)
	/// Proof: `Acurast::StoredJobRegistration` (`max_values`: None, `max_size`: Some(34817), added: 37292, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::JobBudgets` (r:1 w:1)
	/// Proof: `AcurastMarketplace::JobBudgets` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn deregister() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `866`
		//  Estimated: `38282`
		// Minimum execution time: 94_600_000 picoseconds.
		Weight::from_parts(97_129_000, 0)
			.saturating_add(Weight::from_parts(0, 38282))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Acurast::StoredJobRegistration` (r:1 w:1)
	/// Proof: `Acurast::StoredJobRegistration` (`max_values`: None, `max_size`: Some(34817), added: 37292, mode: `MaxEncodedLen`)
	/// Storage: `AcurastMarketplace::StoredJobStatus` (r:1 w:0)
	/// Proof: `AcurastMarketplace::StoredJobStatus` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[1, 1000]`.
	fn update_allowed_sources(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `603`
		//  Estimated: `38282`
		// Minimum execution time: 36_080_000 picoseconds.
		Weight::from_parts(36_699_000, 0)
			.saturating_add(Weight::from_parts(0, 38282))
			// Standard Error: 19_588
			.saturating_add(Weight::from_parts(1_771_121, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Acurast::StoredRevokedCertificate` (r:4 w:0)
	/// Proof: `Acurast::StoredRevokedCertificate` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `Acurast::StoredAttestation` (r:0 w:1)
	/// Proof: `Acurast::StoredAttestation` (`max_values`: None, `max_size`: Some(11623), added: 14098, mode: `MaxEncodedLen`)
	fn submit_attestation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `174`
		//  Estimated: `11038`
		// Minimum execution time: 17_662_099_000 picoseconds.
		Weight::from_parts(17_740_039_000, 0)
			.saturating_add(Weight::from_parts(0, 11038))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Acurast::StoredRevokedCertificate` (r:0 w:1)
	/// Proof: `Acurast::StoredRevokedCertificate` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	fn update_certificate_revocation_list() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_530_000 picoseconds.
		Weight::from_parts(11_290_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Acurast::StoredJobRegistration` (r:1 w:0)
	/// Proof: `Acurast::StoredJobRegistration` (`max_values`: None, `max_size`: Some(34817), added: 37292, mode: `MaxEncodedLen`)
	/// Storage: `Acurast::ExecutionEnvironment` (r:0 w:1)
	/// Proof: `Acurast::ExecutionEnvironment` (`max_values`: None, `max_size`: Some(10743), added: 13218, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[1, 10]`.
	fn set_environment(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `333`
		//  Estimated: `38282`
		// Minimum execution time: 24_620_000 picoseconds.
		Weight::from_parts(26_015_477, 0)
			.saturating_add(Weight::from_parts(0, 38282))
			// Standard Error: 6_823
			.saturating_add(Weight::from_parts(358_786, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Acurast::StoredJobRegistration` (r:1 w:0)
	/// Proof: `Acurast::StoredJobRegistration` (`max_values`: None, `max_size`: Some(34817), added: 37292, mode: `MaxEncodedLen`)
	/// Storage: `Acurast::ExecutionEnvironment` (r:0 w:64)
	/// Proof: `Acurast::ExecutionEnvironment` (`max_values`: None, `max_size`: Some(10743), added: 13218, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[1, 64]`.
	/// The range of component `y` is `[1, 10]`.
	fn set_environments(x: u32, y: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `333`
		//  Estimated: `38282`
		// Minimum execution time: 28_570_000 picoseconds.
		Weight::from_parts(29_060_000, 0)
			.saturating_add(Weight::from_parts(0, 38282))
			// Standard Error: 38_311
			.saturating_add(Weight::from_parts(7_306_734, 0).saturating_mul(x.into()))
			// Standard Error: 246_438
			.saturating_add(Weight::from_parts(6_878_084, 0).saturating_mul(y.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(x.into())))
	}
}
