
//! Autogenerated weights for `pallet_acurast_compute`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-10-18, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: runner-benchmark`, CPU: `AMD EPYC 7B13`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("westend-dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/polkadot
// benchmark
// pallet
// --chain=westend-dev
// --steps=50
// --repeat=20
// --no-storage-info
// --no-median-slopes
// --no-min-squares
// --pallet=pallet_acurast_compute
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --header=./file_header.txt
// --output=./runtime/westend/src/weights/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_acurast_compute`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_acurast_compute::WeightInfo for WeightInfo<T> {
	fn create_pool(_x: u32) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `339`
		//  Estimated: `4764`
		// Minimum execution time: 55_980_000 picoseconds.
		Weight::from_parts(58_270_000, 0)
			.saturating_add(Weight::from_parts(0, 4764))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	fn modify_pool_same_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `129`
		//  Estimated: `1549`
		// Minimum execution time: 14_120_000 picoseconds.
		Weight::from_parts(14_530_000, 0)
			.saturating_add(Weight::from_parts(0, 1549))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	fn modify_pool_replace_config(_x: u32) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `129`
		//  Estimated: `1549`
		// Minimum execution time: 14_120_000 picoseconds.
		Weight::from_parts(14_530_000, 0)
			.saturating_add(Weight::from_parts(0, 1549))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	fn modify_pool_update_config(_x: u32) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `129`
		//  Estimated: `1549`
		// Minimum execution time: 14_120_000 picoseconds.
		Weight::from_parts(14_530_000, 0)
			.saturating_add(Weight::from_parts(0, 1549))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
