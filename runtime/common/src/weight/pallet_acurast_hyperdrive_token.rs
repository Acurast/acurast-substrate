
//! Autogenerated weights for `pallet_acurast_hyperdrive_token`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2025-04-24, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `acurast-benchmark`, CPU: `AMD EPYC 7B13`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("acurast-kusama")`, DB CACHE: 1024

// Executed Command:
// /acurast-node
// benchmark
// pallet
// --chain=acurast-kusama
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// *
// --extrinsic
// *
// --steps=50
// --repeat=20
// --output=/benchmarks/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_acurast_hyperdrive_token`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_acurast_hyperdrive_token::WeightInfo for WeightInfo<T> {
	/// Storage: `AcurastHyperdriveToken::EthereumContract` (r:1 w:0)
	/// Proof: `AcurastHyperdriveToken::EthereumContract` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AcurastHyperdriveToken::NextTransferNonce` (r:1 w:1)
	/// Proof: `AcurastHyperdriveToken::NextTransferNonce` (`max_values`: None, `max_size`: Some(5), added: 2480, mode: `MaxEncodedLen`)
	/// Storage: `AcurastHyperdriveIbc::OutgoingMessages` (r:1 w:1)
	/// Proof: `AcurastHyperdriveIbc::OutgoingMessages` (`max_values`: None, `max_size`: Some(1256), added: 3731, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AcurastHyperdriveToken::OutgoingTransfers` (r:0 w:1)
	/// Proof: `AcurastHyperdriveToken::OutgoingTransfers` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
	/// Storage: `AcurastHyperdriveIbc::OutgoingMessagesLookup` (r:0 w:1)
	/// Proof: `AcurastHyperdriveIbc::OutgoingMessagesLookup` (`max_values`: None, `max_size`: Some(135), added: 2610, mode: `MaxEncodedLen`)
	fn transfer_native() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `434`
		//  Estimated: `6196`
		// Minimum execution time: 184_680_000 picoseconds.
		Weight::from_parts(189_931_000, 0)
			.saturating_add(Weight::from_parts(0, 6196))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `AcurastHyperdriveToken::OutgoingTransfers` (r:1 w:0)
	/// Proof: `AcurastHyperdriveToken::OutgoingTransfers` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
	/// Storage: `AcurastHyperdriveToken::EthereumContract` (r:1 w:0)
	/// Proof: `AcurastHyperdriveToken::EthereumContract` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AcurastHyperdriveIbc::OutgoingMessages` (r:1 w:1)
	/// Proof: `AcurastHyperdriveIbc::OutgoingMessages` (`max_values`: None, `max_size`: Some(1256), added: 3731, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `AcurastHyperdriveIbc::OutgoingMessagesLookup` (r:0 w:1)
	/// Proof: `AcurastHyperdriveIbc::OutgoingMessagesLookup` (`max_values`: None, `max_size`: Some(135), added: 2610, mode: `MaxEncodedLen`)
	fn retry_transfer_native() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `830`
		//  Estimated: `4721`
		// Minimum execution time: 150_570_000 picoseconds.
		Weight::from_parts(153_510_000, 0)
			.saturating_add(Weight::from_parts(0, 4721))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `AcurastHyperdriveToken::EthereumContract` (r:0 w:1)
	/// Proof: `AcurastHyperdriveToken::EthereumContract` (`max_values`: Some(1), `max_size`: Some(20), added: 515, mode: `MaxEncodedLen`)
	fn update_ethereum_contract() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_409_000 picoseconds.
		Weight::from_parts(8_860_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `AcurastHyperdriveToken::SolanaContract` (r:0 w:1)
	/// Proof: `AcurastHyperdriveToken::SolanaContract` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	fn update_solana_contract() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_600_000 picoseconds.
		Weight::from_parts(9_151_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
